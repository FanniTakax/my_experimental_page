{"version":3,"sources":["img/mimi_and_fanni.jpg","components/Button.js","components/LandingPage.js","components/MainPageComponents/About.js","components/MainPageComponents/Now.js","components/MainPageComponents/Cv.js","components/MainPageComponents/Thoughts/ThoughtForm.js","firebase/firebase.js","components/MainPageComponents/Thoughts/ThoughtSingle.js","components/MainPageComponents/Thoughts.js","components/MainPageComponents/Movies/MovieCard.js","components/MainPageComponents/Movies.js","components/MainPageComponents/Nav.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","type","onClick","buttonName","LandingPage","history","useHistory","className","push","About","src","mimi_and_fanni","alt","Now","href","Cv","ThoughtForm","onSubmit","handleFormSubmit","name","value","thought","onChange","handleFormChange","placeholder","rows","cols","required","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ThoughtSingle","key","id","Thoughts","useState","array","ref","once","then","dataSnapshot","forEach","val","console","log","thoughtsArray","useEffect","setThought","e","target","preventDefault","addThought","item","MovieCard","movie","title","poster_path","release_date","vote_average","overview","Movies","query","setQuery","movies","setMovies","searchMovies","a","url","fetch","res","json","data","results","htmlFor","length","filter","map","Burgernav","styled","div","open","Nav","setOpen","to","path","render","routerProps","MainPage","basename","process","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d44ee54b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mimi_and_fanni.b35e2ec3.jpg\";","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <button type=\"button\" onClick={props.onClick}>{props.buttonName}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from './Button'\r\n\r\nconst LandingPage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <h1 className=\"title-h\">You are on Fanni's experimental page!</h1>\r\n      <Button buttonName={'Check it out!'} onClick={() => history.push('/main')} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport mimi_and_fanni from '../../img/mimi_and_fanni.jpg'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"main-page-content about\">\r\n            <p>I am ...\r\n            </p>\r\n            <p>This experimental website is being created with the aim of using in \r\n            practice all the different parts I am constantly learning on my journey in web development.\r\n            It is a blueprint of my knowledge. My journey in web development goes towards being able\r\n            to participate in projects that create value, to connect dots, to gain and share knowledge.\r\n            </p>\r\n            <p>This is a simple React website. ...\r\n            </p>\r\n            <img src={mimi_and_fanni} alt=\"Mimi and Me\" />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Now = () => {\r\n    return (\r\n        <div className=\"main-page-content\">\r\n            <p>I am fine, expanding my knowledge and working on this page. \r\n            I am learning React and CSS.</p>\r\n            <p>I am also spending a as much time as I can outdoors with my dog, Mimi, \r\n            practicing qi gong and juggling, playing on cajon and flute.\r\n            </p>\r\n            <p className=\"p-center\">This post is part of the <a href=\"https://nownownow.com/about\">‘now page’ movement</a> by Derek Sivers.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Now;\r\n","import React from 'react';\r\n\r\nconst Cv = () => {\r\n    return (\r\n        <div className=\"main-page-content cv\">\r\n            <p className=\"p-center\">My CV is coming here</p>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Cv;","import React from 'react';\r\n\r\n\r\nconst ThoughtForm = (props) => {\r\n    return (\r\n        <form className=\"thought-form\" onSubmit={props.handleFormSubmit}>\r\n            \r\n            <textarea className=\"textarea\" name=\"thought\" value={props.thought.thought} onChange={props.handleFormChange} placeholder=\"Write here a thought\" rows=\"7\" cols=\"10\" required></textarea>\r\n            <div className=\"thought-form-div\">\r\n                <input className=\"input thoughts-input\" type=\"text\" name=\"name\" value={props.thought.name} onChange={props.handleFormChange} placeholder=\"Your name\"  required/>\r\n                <button type=\"submit\">Add Thought</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ThoughtForm;","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBjzIwCtEXCgCxZdHINQWDP01JDGzPFm_8\",\r\n    authDomain: \"aproject-13fd8.firebaseapp.com\",\r\n    databaseURL: \"https://aproject-13fd8.firebaseio.com\",\r\n    projectId: \"aproject-13fd8\",\r\n    storageBucket: \"aproject-13fd8.appspot.com\",\r\n    messagingSenderId: \"214699318623\",\r\n    appId: \"1:214699318623:web:73a3d24da50f4fa981eaea\",\r\n    measurementId: \"G-X72H6LGJBB\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst database = firebase.database();\r\n \r\nexport default database;\r\n","import React from 'react';\r\n\r\nconst ThoughtSingle = (props) => {\r\n    return (\r\n     <li className=\"thought-single\" key={props.id}>\r\n        <p className=\"thought-single-p\">{props.thought}</p>\r\n        <span className=\"thought-single-span\">{props.name}</span>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default ThoughtSingle;","import React, { useState, useEffect } from 'react';\r\nimport ThoughtForm from './Thoughts/ThoughtForm';\r\nimport database from '../../firebase/firebase';\r\nimport ThoughtSingle from './Thoughts/ThoughtSingle';\r\nimport _ from 'lodash';\r\n\r\nconst Thoughts = () => {\r\n    \r\n     \r\n    // Get thoughts data from database\r\n    const getThoughtsArray = () => {\r\n        let array = []\r\n        database.ref('thoughts')\r\n            .once('value')\r\n            .then((dataSnapshot) => { \r\n                dataSnapshot.forEach((thought) => {\r\n                    array.push({\r\n                        id: thought.key,\r\n                        ...thought.val()\r\n                    })\r\n                })\r\n            })   \r\n        console.log(array)\r\n        return array\r\n    }\r\n    \r\n    const [thoughtsArray, setThoughtsArray] = useState(getThoughtsArray)\r\n\r\n    // After first render, load thought objects from the database\r\n    useEffect(() => {   \r\n        console.log(thoughtsArray)\r\n    }, [])\r\n    \r\n\r\n    // props sent to ThoughtsForm ------------------------------------------------------------------------\r\n    const [thought, setThought] = useState({\r\n        thought: '',\r\n        name: ''\r\n    })\r\n    const addThought = (thought, name) => {\r\n        database.ref('thoughts').push({\r\n            thought: thought,\r\n            name: name\r\n        })\r\n    }\r\n    const handleFormChange = (e) => {\r\n        setThought({...thought, [e.target.name]: e.target.value})\r\n    }\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        addThought(thought.thought, thought.name);\r\n        setThought({\r\n            thought: '',\r\n            name: ''\r\n        });\r\n    }\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    \r\n    const tibidubu = [\r\n        {id: '5', name: 'Fannni', thought: 'This page is constantly evolving, feel free to visit again soon :)'},\r\n        {id: '1', name: 'Lalika', thought: 'vlami valahol valamikor'},\r\n        {id: '2', name: 'Barbie', thought: 'where are my shoes'},\r\n        {id: '3', name: 'Geza', thought: 'fekete bika pata kopog a patika epita koven'},\r\n        {id: '4', name: 'Simonka a cica', thought: 'Prrrrr prrp prrrr prrr grrrrr meeeeeooooooowwwwww wwwweeeeeiiii prrrrrr prrrrr'},\r\n    ]\r\n    console.log(tibidubu)\r\n\r\n    return (\r\n        <div className=\"thoughts main-page-content\">\r\n            <p className=\"p-center\">You can leave a thought here</p>\r\n            <p className=\"p-center\" >// ... working on the implementation ... //</p>\r\n            <p className=\"p-center\"><small>If you leave a thought now, it will be saved in a database. They will be visible here soon.</small></p>\r\n            <ThoughtForm thought={thought} handleFormChange={handleFormChange} handleFormSubmit={handleFormSubmit} />\r\n            <ul className='thoughts-list'>\r\n                {\r\n                    thoughtsArray.forEach((item) => {\r\n                        return <ThoughtSingle id={item.id} name={item.name} thought={item.thought} />\r\n                    })\r\n                }\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Thoughts;","import React from 'react'\r\n\r\nconst MovieCard = (props) => {\r\n    return (\r\n        <div className=\"movie-card\" key={props.movie.id}>\r\n            <h4 className=\"movie-card-title\">{props.movie.title}</h4>\r\n            <img className=\"movie-card-img\" \r\n                    src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${props.movie.poster_path}`} \r\n                    alt={props.movie.title + ' poster'}\r\n                    />\r\n            <p><small>RELEASE DATE: {props.movie.release_date}</small></p>\r\n            <p><small>RATING: {props.movie.vote_average}</small></p>\r\n            <p className=\"description\">{props.movie.overview}</p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default MovieCard\r\n","import React, { useState } from 'react'\r\nimport MovieCard from './Movies/MovieCard'\r\n\r\nconst Movies = () => {\r\n    const [query, setQuery] = useState('')\r\n    const [movies, setMovies] = useState([])\r\n    \r\n    const searchMovies = async (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=13b13773c8e40b0f6d3c622048ceeef6&language=en-US&query=${query}&page=1&include_adult=false`;\r\n    \r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            console.log(data.results)\r\n            setMovies(data.results)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const inputChangeHandler = (e) => {\r\n        setQuery(e.target.value)\r\n    } \r\n\r\n    return (\r\n        <div className=\"movies main-page-content\">\r\n            <h1>Search Movies</h1>\r\n            <form className=\"movies-form\" onSubmit={searchMovies}>\r\n                <label htmlFor=\"query\" className=\"movies-label\">Movie title or keyword</label>\r\n                <input className=\"input movies-input\" type=\"text\" name=\"query\" value={query} onChange={inputChangeHandler} placeholder=\"i. e. Chocolate\" required></input>\r\n                <button className=\"button\" type=\"submit\">SEARCH</button>\r\n            </form>\r\n            \r\n            <div className=\"movie-card-list\">\r\n                {movies.length === 0 ? <p>No movies found yet...</p> : movies.filter(movie => movie.poster_path).map(movie => (\r\n                    <MovieCard movie={movie} />\r\n                ))}\r\n            </div>\r\n            <p><small>This app is using the <a href=\"https://www.themoviedb.org\">https://www.themoviedb.org</a> API</small></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React, { useState } from 'react'\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nimport About from './About';\r\nimport Now from './Now';\r\nimport Cv from './Cv';\r\nimport Thoughts from './Thoughts';\r\nimport Movies from './Movies';\r\n\r\nconst Burgernav = styled.div`\r\n    max-width: 14rem;\r\n    position: absolute;\r\n    z-index: 20;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    background-color: white;\r\n    border: ${({ open }) => open ? 'solid 1px rgba(148, 150, 145, 0.8);' : 'none'};\r\n    \r\n    nav {\r\n        display: none;\r\n        flex-direction: column;\r\n        justify-content: space-around;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        \r\n        nav {\r\n            display: ${({ open }) => open ? 'flex' : 'none'};\r\n        }\r\n        div {\r\n            width: 2rem;\r\n            height: 0.25rem;\r\n            background-color: rgba(49, 54, 42, 0.8);\r\n            border-radius: 10px;\r\n            margin: 0.2rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Nav = () => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <nav className='nav-main'>\r\n                <Link to=\"/main/about\" className='nav-main-link'>ABOUT</Link>\r\n                <Link to=\"/main/now\" className='nav-main-link'>NOW</Link>\r\n                <Link to=\"/main/curriculum\" className='nav-main-link'>CURRICULUM</Link>\r\n                <Link to=\"/main/thoughts\" className='nav-main-link'>TOUGHTS</Link>\r\n                <Link to=\"/main/movies\" className='nav-main-link'>MOVIES</Link>\r\n            </nav>\r\n            <Burgernav open={open} onClick={() => setOpen(!open)}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <nav className='nav-main-burger'>\r\n                    <Link to=\"/main/about\" className='nav-main-link'>ABOUT</Link>\r\n                    <Link to=\"/main/now\" className='nav-main-link'>NOW</Link>\r\n                    <Link to=\"/main/curriculum\" className='nav-main-link'>CURRICULUM</Link>\r\n                    <Link to=\"/main/thoughts\" className='nav-main-link'>TOUGHTS</Link>\r\n                    <Link to=\"/main/movies\" className='nav-main-link'>MOVIES</Link>\r\n                </nav>\r\n            </Burgernav>\r\n            <Switch>\r\n                <Route path=\"/main/about\" render={(routerProps) => <About routerProps={routerProps}/>}></Route>\r\n                <Route path=\"/main/now\" render={(routerProps) => <Now routerProps={routerProps}/>} ></Route>\r\n                <Route path=\"/main/curriculum\" render={(routerProps) => <Cv routerProps={routerProps}/>} ></Route>\r\n                <Route path=\"/main/thoughts\" render={(routerProps) => <Thoughts routerProps={routerProps}/>}  ></Route>\r\n                <Route path=\"/main/movies\" render={(routerProps) => <Movies routerProps={routerProps}/>}  ></Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\n\r\nimport Button from './Button';\r\nimport Nav from './MainPageComponents/Nav'\r\n\r\n\r\nconst MainPage = () => {\r\nconst history = useHistory();\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"main-page\">\r\n        <h2 className='title-h title-main'>Fanni's Page</h2>\r\n        <Nav />\r\n        <Button buttonName={'Back to the Landing Page'} onClick={() => history.push('/')} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LandingPage from './components/LandingPage'\r\nimport MainPage from './components/MainPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path='/' exact render={(routerProps) => <LandingPage routerProps={routerProps}/>}></Route>\r\n        <Route path='/main' render={(routerProps) => <MainPage routerProps={routerProps}/>}></Route>\r\n        <Route component={LandingPage}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './firebase/firebase';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}